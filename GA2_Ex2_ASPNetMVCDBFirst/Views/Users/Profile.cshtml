@model GA2_Ex2_ASPNetMVCDBFirst.User

@{
    ViewBag.Title = "Profile";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container py-5">
    <div class="row justify-content-center">
        <div class="col-lg-8">
            <div class="card shadow-sm border-0">
                <div class="card-header text-primary">
                    <h2 class="fw-bold mb-0">My Profile</h2>
                </div>
                <div class="card-body p-4">
                    @if (TempData["Success"] != null)
                    {
                        <div class="alert alert-success alert-dismissible fade show" role="alert">
                            @TempData["Success"]
                            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                        </div>
                    }

                    @{
                        var isEditing = ViewBag.IsEditing == true;
                    }

                    <div class="text-center mb-4">
                        <div class="profile-pic rounded-circle bg-light d-inline-flex align-items-center justify-content-center" style="width: 100px; height: 100px;">
                            <i class="fas fa-user fa-2x text-muted"></i>
                        </div>
                    </div>

                    @if (isEditing)
                    {
                        using (Html.BeginForm("Profile", "Users", FormMethod.Post, new { @class = "needs-validation", novalidate = true }))
                        {
                            @Html.AntiForgeryToken()
                            @Html.HiddenFor(model => model.UserID)
                            @Html.Hidden("IsEditing", "true")

                            <div class="mb-4">
                                @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "form-label fw-bold" })
                                <div class="input-group">
                                    <span class="input-group-text bg-light"><i class="fas fa-user"></i></span>
                                    @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control form-control-lg", required = "required" } })
                                </div>
                                @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                            </div>

                            <div class="mb-4">
                                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "form-label fw-bold" })
                                <div class="input-group">
                                    <span class="input-group-text bg-light"><i class="fas fa-envelope"></i></span>
                                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control form-control-lg", type = "email", required = "required" } })
                                </div>
                                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                            </div>

                            if (ViewData.ModelState.Any(x => x.Value != null && x.Value.Errors.Any()))
                            {
                                <div class="alert alert-danger mb-4">
                                    @Html.ValidationSummary(true, "", new { @class = "mb-0" })
                                </div>
                            }

                            <div class="d-flex gap-3 justify-content-end">
                                <button type="submit" class="btn btn-primary px-4">
                                    <i class="fas fa-save me-2"></i>Save Changes
                                </button>
                                <button type="button" class="btn btn-outline-secondary px-4" id="cancelEdit">
                                    <i class="fas fa-times me-2"></i>Cancel
                                </button>
                            </div>
                        }
                    }
                    else
                    {
                        <div class="mb-4">
                            <p class="mb-2"><i class="fas fa-user text-primary me-2"></i><strong>Username:</strong> @Model.UserName</p>
                        </div>
                        <div class="mb-4">
                            <p class="mb-2"><i class="fas fa-envelope text-primary me-2"></i><strong>Email:</strong> @Model.Email</p>
                        </div>
                        <div class="d-flex gap-3 justify-content-end">
                            <form method="get" action="@Url.Action("Profile", "Users")">
                                <input type="hidden" name="edit" value="true" />
                                <button type="submit" class="btn btn-primary px-4" id="editProfile">
                                    <i class="fas fa-edit me-2"></i>Edit Profile
                                </button>
                            </form>
                            <a href="@Url.Action("Shopping", "Items")" class="btn btn-outline-secondary px-4">
                                <i class="fas fa-store me-2"></i>Back to Shopping
                            </a>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            // Bootstrap 5 form validation
            const forms = document.querySelectorAll("form.needs-validation");
            forms.forEach(function (form) {
                form.addEventListener("submit", function (e) {
                    if (!form.checkValidity()) {
                        e.preventDefault();
                        e.stopPropagation();
                    }
                    form.classList.add("was-validated");
                });
            });

            // Cancel edit mode
            const cancelEditButton = document.getElementById("cancelEdit");
            if (cancelEditButton) {
                cancelEditButton.addEventListener("click", function () {
                    window.location.href = '@Url.Action("Profile", "Users")';
                });
            }
        });
    </script>
}